name: CI Build/Test

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      # Set up Arduino CLI
      - name: Set up Arduino
        run: |
          wget https://downloads.arduino.cc/arduino-cli/arduino-cli_latest_Linux_64bit.tar.gz
          tar -xvf arduino-cli_latest_Linux_64bit.tar.gz
          sudo mv arduino-cli /usr/local/bin/
          arduino-cli config init

      - name: Add Arduino AVR Boards package
        run: |
          arduino-cli core update-index
          arduino-cli core install arduino:avr

      # Install and configure Doxygen
      - name: Install Doxygen
        run: |
          sudo apt-get update
          sudo apt-get install -y doxygen
          
      # Generate Doxygen Documentation
      - name: Generate Doxygen Documentation
        run: |
          doxygen -g # Generates a default Doxyfile if none exists
          sed -i 's|OUTPUT_DIRECTORY.*|OUTPUT_DIRECTORY = ./docs|' Doxyfile
          sed -i 's|INPUT.*|INPUT = ./|' Doxyfile
          sed -i 's|RECURSIVE.*|RECURSIVE = YES|' Doxyfile
          doxygen Doxyfile

      # Upload documentation as artifact
      - name: Upload documentation as artifact
        uses: actions/upload-artifact@v3
        with:
          name: docs_html
          path: docs/html

      # Collect binaries as artifacts
      - name: Upload binaries reports
        uses: actions/upload-artifact@v3
        with:
          name: compiled-files
          path: build/*.hex

      # Collect test results as artifacts
      - name: Upload test reports
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: test-reports/results.xml
